// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cricketic.Data;

#nullable disable

namespace cricketic.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250512220100_RecreateBowlingOverTable")]
    partial class RecreateBowlingOverTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalWebapi.Models.BowlingOverPerformance", b =>
                {
                    b.Property<int>("OverPerformanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OverPerformanceID"));

                    b.Property<int>("ExtrasInOver")
                        .HasColumnType("int");

                    b.Property<string>("MatchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OverNumber")
                        .HasColumnType("int");

                    b.Property<string>("PlayerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RunsInOver")
                        .HasColumnType("int");

                    b.Property<string>("WicketBalls")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OverPerformanceID");

                    b.ToTable("BowlingOverPerformances");
                });

            modelBuilder.Entity("FinalWebapi.Models.PlayerPerformance", b =>
                {
                    b.Property<int>("PerformanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerformanceID"));

                    b.Property<int>("BallsFaced")
                        .HasColumnType("int");

                    b.Property<int>("BattingPosition")
                        .HasColumnType("int");

                    b.Property<string>("Bowler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fielder1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fielder2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fours")
                        .HasColumnType("int");

                    b.Property<bool>("IsOut")
                        .HasColumnType("bit");

                    b.Property<string>("MatchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutOverBall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Runs")
                        .HasColumnType("int");

                    b.Property<int>("Sixes")
                        .HasColumnType("int");

                    b.Property<string>("TotalBall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalWicket")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerformanceID");

                    b.ToTable("PlayerPerformances");
                });

            modelBuilder.Entity("MatchEntry", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"));

                    b.Property<int>("FirstInnings")
                        .HasColumnType("int");

                    b.Property<string>("MatchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MatchStatus")
                        .HasColumnType("int");

                    b.Property<int>("MatchType")
                        .HasColumnType("int");

                    b.Property<string>("OppositeTeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TossResult")
                        .HasColumnType("int");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MatchId");

                    b.ToTable("MatchEntries");
                });

            modelBuilder.Entity("Sponsorship1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sponsorship1");
                });

            modelBuilder.Entity("cricketic.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("social_links", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("social_links");
                });
#pragma warning restore 612, 618
        }
    }
}
